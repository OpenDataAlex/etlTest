{{ header }}

import unittest
import sqlalchemy
from etltest.code_executor import CodeExecutor
class {{ testGroup }}Test(unittest.TestCase):

    def setUp(self):
        {% for test in tests %}
            {% for set in test.dataset %}
                #Create engines for loading test data.
                {% if set not in sources %}
                    self.{{ set.source }}Engine = sqlalchemy.create_engine()
                {% endif %}
            {% endfor %}

            {% for set in test.dataset %}
                #Create queries for the insertion of test data.
            {% endfor %}
        {% endfor %}

    def tearDown(self)

{% for test in tests %}
    def {{ test.name }}(suite):
        #{{ test.desc }}
        test_suites = {
                      {% for suite in test.suites %}
                          "{{ suite.suite }}",
                      {% endfor %}
                      }

        tools = {
                {% for procs in test.processes %}
                    "{{ procs.tool }}":
                            {% for job in procs.jobs %}
                            "{{ job.job }}",
                            {% endfor %}
                {% endfor %}
                }

        given_result = self.{{ test.dataset.source }}Engine

{% endfor %}