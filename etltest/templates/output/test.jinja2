{{ header }}
# These tests are also run as part of the following suites:
#
{% for suite in tests.suites %}
#    {{ suite.suite }}
{% endfor %}
#
# The following processes are executed for these tests:
#
{% for proc in tests.processes %}
#    {{ proc.tool }}:
  {% for job in proc.jobs %}
#      {{ job.job }}
  {% endfor %}
{% endfor %}

import unittest
import sqlalchemy
from etltest.code_executor import CodeExecutor
from etltest.data_connector import DataConnector


class {{ testGroup }}Test(unittest.TestCase):

    def setUp(self):
        # Create engines and queries for loading test data.

      {% for set in tests.dataset %}
        DataConnector({{ set.source }}).insert_data({{ set.source }}, {{ testData[set.source][set.table] }})
      {% endfor %}

    def tearDown(self):
       # Clean up testing environment.

      {% for set in tests.dataset %}
        DataConnector({{ set.source }}).delete_data({{ set.source }}, {{ testData[set.source][set.table] }})
      {% endfor %}

{% for test in tests.tests %}
    def {{ test.name }}(suite):
        # {{ test.desc }}

        given_result = self.{{ test.query.source }}Engine.execute("SELECT {{ test.query.select }} FROM {{ test.query.from }} WHERE {{ test.query.where }}")

        expected_result = "{{ test.query.result }}"

        self.assertEqual(given_result, expected_result)
{% endfor %}